/* -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- */
/* ***** BEGIN LICENSE BLOCK *****
 * Version: NPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Netscape Public License
 * Version 1.1 (the "License"); you may not use this file except in
 * compliance with the License. You may obtain a copy of the License at
 * http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is 
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or 
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the NPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the NPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/**
 * A sample of XPConnect. This file contains a sample interface.
 *
 */

#include "nsISupports.idl"

/**
 * The uuid is a unique number identifying the interface normally
 * called IID. It can be generated as follows:
 *
 * Windows: guidgen.exe
 * Unix: uuidgen which comes with e2fsprogs package
 * Mac: ???
 * All platform: Using irc, connect to irc.mozilla.org and type in
 *				/join #mozilla
 *				/msg mozbot uuid
 *
  // nsITidy GUID
  // {74D910C3-A4CB-495f-9EBD-269819B3AFD1}
  // DEFINE_GUID(<<name>>, 
  // 0x74d910c3, 0xa4cb, 0x495f, 0x9e, 0xbd, 0x26, 0x98, 0x19, 0xb3, 0xaf, 0xd1);
 */
 
[scriptable, uuid(74D910C3-A4CB-495f-9EBD-269819B3AFD1)]
interface nsITidy : nsISupports
{
    void getLibraryVersion( inout PRInt32 aVersion );
    void getErrorsInHTML(in AUTF8String aHtml, in string aListConfig, in PRInt32 aAccessLevel, out AUTF8String aError, inout PRInt32 aNbError, inout PRInt32 aNbWarning, inout PRInt32 aNbAccessWarning, inout PRInt32 aNbHidden );
    void cleanupHTML(in AUTF8String aHtml, in string aListConfig, in PRInt32 aAccessLevel, out AUTF8String aCleanupHTML );
    void getLinks(in AUTF8String aHtml, in string aListConfig, in PRInt32 aAccessLevel, out AUTF8String aLinks, inout PRInt32 aNbError, inout PRInt32 aNbWarning, inout PRInt32 aNbAccessWarning, inout PRInt32 aNbHidden );
    void getConfig( inout string aListConfig );
    void analyzeLine( in AUTF8String aError, inout PRInt32 aLine, inout PRInt32 aColumn, inout PRInt32 aType, inout string aText, inout PRInt32 aErrorID, inout string aArg1, inout string aArg2, inout string aArg3 );
    void getErrorDescription( in PRInt32 aErrorId, out AUTF8String aErrorDesc );
    void getIdOfAllErrors( inout string aErrorList );
    void initDiagLog( in AUTF8String aDir, in PRInt32 bDebug );
    void log( in AUTF8String msg );
    
    // Translation 
    PRInt32 initTranslation();
    void addTranslations( in AUTF8String aTranslation );
    void resetFilter();
    void filterMsg( in PRInt32 aCode );
    void setTranslationPrefix(in AUTF8String aPrefix, in AUTF8String aLineCol);
    void checkTranslation();
    void printEnglishTranslation();
    
    // OpenSP
    void spInit(in AUTF8String aSgmlLibPath,in AUTF8String aXmlLibPath );
    void spGetErrorsInHTML(in AUTF8String aHtml, in string aListConfig, in PRInt32 aAccessLevel, out AUTF8String aError, inout PRInt32 aNbError, inout PRInt32 aNbWarning, inout PRInt32 aNbAccessWarning, inout PRInt32 aNbHidden );
};
